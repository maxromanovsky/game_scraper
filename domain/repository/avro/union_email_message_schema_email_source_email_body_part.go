// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     email-message.json
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
)

type UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnum int

const (
	UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailMessageSchema UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnum = 0

	UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailSource UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnum = 1

	UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailBodyPart UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnum = 2
)

type UnionEmailMessageSchemaEmailSourceEmailBodyPart struct {
	EmailMessageSchema *EmailMessageSchema
	EmailSource        EmailSource
	EmailBodyPart      *EmailBodyPart
	UnionType          UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnum
}

func writeUnionEmailMessageSchemaEmailSourceEmailBodyPart(r *UnionEmailMessageSchemaEmailSourceEmailBodyPart, w io.Writer) error {

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailMessageSchema:
		return writeEmailMessageSchema(r.EmailMessageSchema, w)
	case UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailSource:
		return writeEmailSource(r.EmailSource, w)
	case UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailBodyPart:
		return writeEmailBodyPart(r.EmailBodyPart, w)
	}
	return fmt.Errorf("invalid value for *UnionEmailMessageSchemaEmailSourceEmailBodyPart")
}

func NewUnionEmailMessageSchemaEmailSourceEmailBodyPart() *UnionEmailMessageSchemaEmailSourceEmailBodyPart {
	return &UnionEmailMessageSchemaEmailSourceEmailBodyPart{}
}

func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetBoolean(v bool) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetInt(v int32) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetBytes(v []byte) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetString(v string) {
	panic("Unsupported operation")
}
func (r *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetLong(v int64) {
	r.UnionType = (UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnum)(v)
}
func (r *UnionEmailMessageSchemaEmailSourceEmailBodyPart) Get(i int) types.Field {
	switch i {
	case 0:
		r.EmailMessageSchema = NewEmailMessageSchema()
		return r.EmailMessageSchema
	case 1:
		return &EmailSourceWrapper{Target: (&r.EmailSource)}
	case 2:
		r.EmailBodyPart = NewEmailBodyPart()
		return r.EmailBodyPart
	}
	panic("Unknown field index")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) NullField(i int) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) SetDefault(i int) {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionEmailMessageSchemaEmailSourceEmailBodyPart) Finalize() {}

func (r *UnionEmailMessageSchemaEmailSourceEmailBodyPart) MarshalJSON() ([]byte, error) {
	if r == nil {
		return []byte("null"), nil
	}
	switch r.UnionType {
	case UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailMessageSchema:
		return json.Marshal(map[string]interface{}{"EmailMessageSchema": r.EmailMessageSchema})
	case UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailSource:
		return json.Marshal(map[string]interface{}{"EmailSource": r.EmailSource})
	case UnionEmailMessageSchemaEmailSourceEmailBodyPartTypeEnumEmailBodyPart:
		return json.Marshal(map[string]interface{}{"EmailBodyPart": r.EmailBodyPart})
	}
	return nil, fmt.Errorf("invalid value for *UnionEmailMessageSchemaEmailSourceEmailBodyPart")
}

func (r *UnionEmailMessageSchemaEmailSourceEmailBodyPart) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if value, ok := fields["EmailMessageSchema"]; ok {
		r.UnionType = 0
		return json.Unmarshal([]byte(value), &r.EmailMessageSchema)
	}
	if value, ok := fields["EmailSource"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.EmailSource)
	}
	if value, ok := fields["EmailBodyPart"]; ok {
		r.UnionType = 2
		return json.Unmarshal([]byte(value), &r.EmailBodyPart)
	}
	return fmt.Errorf("invalid value for *UnionEmailMessageSchemaEmailSourceEmailBodyPart")
}
